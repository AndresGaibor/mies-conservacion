#!/bin/bash

# Script de monitoreo para MIES Conservaci√≥n
# Uso: ./monitor.sh

echo "üîç Monitor de MIES Conservaci√≥n"
echo "================================"

# Funci√≥n para mostrar informaci√≥n del sistema
show_system_info() {
    echo "üìä Informaci√≥n del Sistema:"
    echo "  CPU: $(top -l 1 | grep "CPU usage" | awk '{print $3}' | sed 's/%//')"
    echo "  Memoria: $(vm_stat | grep "Pages free" | awk '{print $3}' | sed 's/\.//')KB libres"
    echo "  Disco: $(df -h / | awk 'NR==2{print $5}') usado"
    echo ""
}

# Funci√≥n para mostrar estado de PM2
show_pm2_status() {
    echo "üöÄ Estado de PM2:"
    pm2 status
    echo ""
}

# Funci√≥n para mostrar logs recientes
show_recent_logs() {
    echo "üìã Logs Recientes (√∫ltimas 10 l√≠neas):"
    echo "======================================"
    if [ -f "./logs/out.log" ]; then
        tail -10 ./logs/out.log
    else
        echo "No hay logs disponibles a√∫n."
    fi
    echo ""
}

# Funci√≥n para mostrar estad√≠sticas de la aplicaci√≥n
show_app_stats() {
    echo "üìà Estad√≠sticas de la Aplicaci√≥n:"
    echo "================================="
    
    # Verificar si el puerto est√° escuchando
    if lsof -i :3001 >/dev/null 2>&1; then
        echo "‚úÖ Servidor ejecut√°ndose en puerto 3001"
    else
        echo "‚ùå Servidor NO est√° ejecut√°ndose en puerto 3001"
    fi
    
    # Verificar logs de errores
    if [ -f "./logs/error.log" ]; then
        ERROR_COUNT=$(wc -l < ./logs/error.log)
        echo "‚ö†Ô∏è  Errores registrados: $ERROR_COUNT"
        if [ $ERROR_COUNT -gt 0 ]; then
            echo "   √öltimos errores:"
            tail -3 ./logs/error.log | sed 's/^/   /'
        fi
    fi
    
    echo ""
}

# Loop principal
while true; do
    clear
    echo "$(date)"
    echo ""
    
    show_system_info
    show_pm2_status
    show_app_stats
    show_recent_logs
    
    echo "üí° Comandos disponibles:"
    echo "   r - Reiniciar aplicaci√≥n"
    echo "   l - Ver logs en tiempo real"
    echo "   s - Detener aplicaci√≥n"
    echo "   q - Salir del monitor"
    echo ""
    
    read -t 10 -n 1 -s input
    
    case $input in
        r|R)
            echo "üîÑ Reiniciando aplicaci√≥n..."
            pm2 restart mies-conservacion
            sleep 2
            ;;
        l|L)
            echo "üìã Mostrando logs en tiempo real (Ctrl+C para volver)..."
            pm2 logs mies-conservacion
            ;;
        s|S)
            echo "‚èπÔ∏è  Deteniendo aplicaci√≥n..."
            pm2 stop mies-conservacion
            sleep 2
            ;;
        q|Q)
            echo "üëã Saliendo del monitor..."
            exit 0
            ;;
    esac
done
